{"version":3,"sources":["App/Header/index.js","App/Footer/index.js","App/Forms/Buttons/index.js","App/Forms/Form1/index.js","App/Forms/Form2/index.js","App/Forms/Form3/index.js","App/Forms/Form4/tapDiameters.js","App/Forms/Form4/index.js","App/Container/index.js","App/Section/index.js","App/App.js","reportWebVitals.js","index.js"],"names":["Header","title","id","className","Footer","content","annotation","link","Buttons","type","Form1","legend","useState","diameter","setDiameter","rotationSpeed","setRotationSpeed","cuttingSpeed","setCuttingSpeed","onSubmit","event","preventDefault","Math","PI","toFixed","onReset","value","min","step","placeholder","required","autoFocus","onChange","target","readOnly","Form3","feedFactor1","setFeedFactor1","feedFactor2","setFeedFactor2","feedType","setFeedType","feedValue","setFeedValue","onOptionChange","feedOptionList","label","disabled","map","feedOption","name","checked","htmlFor","tapDiameters","pitch","Form4","setPitch","createTapDiameterList","findIndex","toString","tapDiameter","Container","children","Section","body","App","Form2","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1bda033.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nconst Header = ({ title }) => (\r\n    <header id=\"start\">\r\n        <h1 className=\"header__headline\">{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst Footer = ({ content, annotation, link }) => (\r\n  <footer className=\"footer\">\r\n    <p className=\"footer__content\">\r\n      {content}\r\n    </p>\r\n    <p className=\"footer__annotation\">\r\n      {annotation}{link}\r\n    </p>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;","import \"./style.css\";\r\n\r\nconst Buttons = () => (\r\n    <div className=\"form__buttonsContainer\">\r\n        <button className=\"buttons__button buttons__button--submit\" type={\"submit\"}>\r\n            Oblicz\r\n        </button>\r\n        <button className=\"buttons__button buttons__button--reset\" type=\"reset\">\r\n            Wyczyść\r\n        </button>\r\n    </div>\r\n);\r\n\r\nexport default Buttons;","import { useState } from \"react\";\r\nimport Buttons from \"../Buttons\";\r\nimport \"../style.css\";\r\n\r\nconst Form1 = ({ legend }) => {\r\n    const [diameter, setDiameter] = useState(\"\");\r\n    const [rotationSpeed, setRotationSpeed] = useState(\"\");\r\n    const [cuttingSpeed, setCuttingSpeed] = useState(\"\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        setCuttingSpeed((Math.PI * diameter * rotationSpeed / 1000).toFixed(2));\r\n    };\r\n\r\n    const onFormReset = () => {\r\n        setDiameter(\"\");\r\n        setRotationSpeed(\"\");\r\n        setCuttingSpeed(\"\");\r\n    };\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit} onReset={onFormReset} >\r\n            <fieldset className=\"form__fieldset\">\r\n                <legend className=\"form__legend\">{legend}</legend>\r\n                <div className=\"form__fieldsContainer\">\r\n                    <label className=\"form__label\">\r\n                        <span className=\"form__innerText\">\r\n                            <label>D [mm]:</label>\r\n                        </span>\r\n                        <input\r\n                            value={diameter}\r\n                            className=\"form__input\"\r\n                            type=\"number\"\r\n                            min=\"0.0001\"\r\n                            step=\"0.0001\"\r\n                            placeholder=\" średnica narzędzia \"\r\n                            required\r\n                            autoFocus\r\n                            onChange={({ target }) => setDiameter(target.value - 0)}\r\n                        />\r\n                    </label>\r\n                    <label className=\"form__label\">\r\n                        <span className=\"form__innerText\">\r\n                            <label>n [obr/min]:</label>\r\n                        </span>\r\n                        <input\r\n                            value={rotationSpeed}\r\n                            className=\"form__input\"\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            step=\"1\"\r\n                            placeholder=\" obroty wrzeciona \"\r\n                            required\r\n                            onChange={({ target }) => setRotationSpeed(target.value)}\r\n                        />\r\n                    </label>\r\n                    <label className=\"form__label\">\r\n                        <span className=\"form__innerText\">\r\n                            <label>Vc [m/min]:</label>\r\n                        </span>\r\n                        <input\r\n                            value={cuttingSpeed}\r\n                            readOnly\r\n                            placeholder=\" wynik \"\r\n                            className=\"form__input\"\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <Buttons />\r\n            </fieldset>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default Form1;","import { useState } from \"react\";\r\nimport Buttons from \"../Buttons\";\r\nimport \"../style.css\";\r\n\r\nconst Form1 = ({ legend }) => {\r\n    const [diameter, setDiameter] = useState(\"\");\r\n    const [cuttingSpeed, setCuttingSpeed] = useState(\"\");\r\n    const [rotationSpeed, setRotationSpeed] = useState(\"\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        setRotationSpeed((cuttingSpeed * 1000 / Math.PI / diameter).toFixed(2));\r\n    };\r\n\r\n    const onFormReset = (event) => {\r\n        setDiameter(\"\");\r\n        setCuttingSpeed(\"\");\r\n        setRotationSpeed(\"\");\r\n    };\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit} onReset={onFormReset} >\r\n            <fieldset className=\"form__fieldset\">\r\n                <legend className=\"form__legend\">{legend}</legend>\r\n                <div className=\"form__fieldsContainer\">\r\n                    <label className=\"form__label\">\r\n                        <span className=\"form__innerText\">\r\n                            <label>D [mm]:</label>\r\n                        </span>\r\n                        <input\r\n                            value={diameter}\r\n                            className=\"form__input\"\r\n                            type=\"number\"\r\n                            min=\"0.0001\"\r\n                            step=\"0.0001\"\r\n                            placeholder=\" średnica narzędzia \"\r\n                            required\r\n                            onChange={({ target }) => setDiameter(target.value)}\r\n                        />\r\n                    </label>\r\n                    <label className=\"form__label\">\r\n                        <span className=\"form__innerText\">\r\n                            <label>Vc [m/min]:</label>\r\n                        </span>\r\n                        <input\r\n                            value={cuttingSpeed}\r\n                            className=\"form__input\"\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            step=\"1\"\r\n                            placeholder=\" prędkość liniowa \"\r\n                            required\r\n                            onChange={({ target }) => setCuttingSpeed(target.value)}\r\n                        />\r\n                    </label>\r\n                    <label className=\"form__label\">\r\n                        <span className=\"form__innerText\">\r\n                            <label>n_obr. [obr/min]:</label>\r\n                        </span>\r\n                        <input\r\n                            value={rotationSpeed}\r\n                            readOnly\r\n                            placeholder=\" wynik \"\r\n                            className=\"form__input\"\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <Buttons />\r\n            </fieldset>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default Form1;","import { useState } from \"react\";\r\nimport Buttons from \"../Buttons\";\r\nimport \"../style.css\";\r\n\r\nconst Form3 = ({ legend }) => {\r\n    const [rotationSpeed, setRotationSpeed] = useState(\"\");\r\n    const [feedFactor1, setFeedFactor1] = useState(\"\");\r\n    const [feedFactor2, setFeedFactor2] = useState(\"\");\r\n    const [feedType, setFeedType] = useState(\"FPR\");\r\n    const [feedValue, setFeedValue] = useState(\"\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (feedType === \"FPR\") {\r\n            setFeedValue((rotationSpeed * feedFactor1).toFixed());\r\n        } else {\r\n            setFeedValue((rotationSpeed * feedFactor1 * feedFactor2).toFixed());\r\n        }\r\n    };\r\n\r\n    const onFormReset = () => {\r\n        setRotationSpeed(\"\");\r\n        setFeedType(\"FPR\");\r\n        setFeedFactor1(\"\");\r\n        setFeedFactor2(\"\");\r\n        setFeedValue(\"\");\r\n    };\r\n\r\n    const feedOptions = [\r\n        { id: \"FPR\", label: \"f_obr [mm/obr]:\", placeholder: \" posuw na obrót \", disabled: false },\r\n        { id: \"FPT\", label: \"f_z [mm]:\", placeholder: \" posuw na ząb \", disabled: true }\r\n    ];\r\n\r\n    const onOptionChange = ({ target }) => {\r\n        setFeedType(target.value);\r\n        setFeedFactor1(\"\");\r\n        setFeedFactor2(\"\");\r\n    };\r\n\r\n    const feedOptionList = (\r\n        <ul className=\"form__list\">\r\n            {\r\n                feedOptions.map(feedOption => (\r\n                    <li className=\"form__label\" key={feedOption.id}>\r\n                        <div className=\"form__radioButtonContainer\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"feedType\"\r\n                                id={feedOption.id}\r\n                                value={feedOption.id}\r\n                                checked={feedType === feedOption.id}\r\n                                onChange={onOptionChange}\r\n                            />\r\n                            <label htmlFor={feedOption.id}>\r\n                                {feedOption.label}\r\n                            </label>\r\n                        </div>\r\n                        <input\r\n                            value={(feedOption.id === feedType) ? feedFactor1 : \"\"}\r\n                            type=\"number\"\r\n                            min=\"0.01\"\r\n                            step=\"0.01\"\r\n                            required\r\n                            disabled={feedOption.id !== feedType}\r\n                            placeholder={feedOption.placeholder}\r\n                            className=\"form__input\"\r\n                            onChange={({ target }) => setFeedFactor1(target.value)}\r\n                        />\r\n                    </li>\r\n                ))\r\n            }\r\n        </ul>\r\n    );\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit} onReset={onFormReset} >\r\n            <fieldset className=\"form__fieldset\">\r\n                <legend className=\"form__legend\">{legend}</legend>\r\n                <div className=\"form__fieldsContainer\">\r\n                    <label className=\"form__label\">\r\n                        <span className=\".form__innerText\">\r\n                            <label>n [obr/min]:</label>\r\n                        </span>\r\n                        <input\r\n                            value={rotationSpeed}\r\n                            className=\"form__input\"\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            step=\"1\"\r\n                            placeholder=\" obroty wrzeciona \"\r\n                            required\r\n                            onChange={({ target }) => setRotationSpeed(target.value)}\r\n                        />\r\n                    </label>\r\n\r\n                    {feedOptionList}\r\n\r\n                    <label className=\"form__label\">\r\n                        <span className=\".form__innerText\">\r\n                            <label>z:</label>\r\n                        </span>\r\n                        <input\r\n                            value={(feedType === \"FPT\") ? feedFactor2 : \"\"}\r\n                            className=\"form__input\"\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            step=\"1\"\r\n                            placeholder=\" ilość zębów \"\r\n                            required\r\n                            disabled={feedType === \"FPR\"}\r\n                            onChange={({ target }) => setFeedFactor2(target.value)}\r\n                        />\r\n                    </label>\r\n                    <label className=\"form__label\">\r\n                        <span className=\".form__innerText\">\r\n                            <label>f [mm/min]:</label>\r\n                        </span>\r\n                        <input\r\n                            value={feedValue}\r\n                            readOnly\r\n                            placeholder=\" wynik \"\r\n                            className=\"form__input\"\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <Buttons />\r\n            </fieldset>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default Form3;","const tapDiameters = [\r\n    { id: 0, diameter: \"\", pitch: \"\" },\r\n    { id: 1, diameter: 1, pitch: 0.25 },\r\n    { id: 2, diameter: 1.1, pitch: 0.25 },\r\n    { id: 3, diameter: 1.2, pitch: 0.25 },\r\n    { id: 4, diameter: 1.4, pitch: 0.3 },\r\n    { id: 5, diameter: 1.6, pitch: 0.35 },\r\n    { id: 6, diameter: 1.8, pitch: 0.35 },\r\n    { id: 7, diameter: 2, pitch: 0.4 },\r\n    { id: 8, diameter: 2.2, pitch: 0.45 },\r\n    { id: 9, diameter: 2.5, pitch: 0.45 },\r\n    { id: 10, diameter: 3, pitch: 0.5 },\r\n    { id: 11, diameter: 3.5, pitch: 0.6 },\r\n    { id: 12, diameter: 4, pitch: 0.7 },\r\n    { id: 13, diameter: 4.5, pitch: 0.75 },\r\n    { id: 14, diameter: 5, pitch: 0.8 },\r\n    { id: 15, diameter: 6, pitch: 1 },\r\n    { id: 16, diameter: 7, pitch: 1 },\r\n    { id: 17, diameter: 8, pitch: 1.25 },\r\n    { id: 18, diameter: 9, pitch: 1.25 },\r\n    { id: 19, diameter: 10, pitch: 1.5 },\r\n    { id: 20, diameter: 11, pitch: 1.5 },\r\n    { id: 21, diameter: 12, pitch: 1.75 },\r\n    { id: 22, diameter: 14, pitch: 2 },\r\n    { id: 23, diameter: 16, pitch: 2 },\r\n    { id: 24, diameter: 18, pitch: 2.5 },\r\n    { id: 25, diameter: 20, pitch: 2.5 },\r\n    { id: 26, diameter: 22, pitch: 2.5 },\r\n    { id: 27, diameter: 24, pitch: 3 },\r\n    { id: 28, diameter: 27, pitch: 3 },\r\n    { id: 29, diameter: 30, pitch: 3.5 },\r\n    { id: 30, diameter: 33, pitch: 3.5 },\r\n    { id: 31, diameter: 36, pitch: 4 },\r\n    { id: 32, diameter: 39, pitch: 4 },\r\n    { id: 33, diameter: 42, pitch: 4.5 },\r\n    { id: 34, diameter: 45, pitch: 4.5 },\r\n    { id: 35, diameter: 48, pitch: 5 },\r\n    { id: 36, diameter: 52, pitch: 5 },\r\n    { id: 37, diameter: 56, pitch: 5.5 },\r\n    { id: 38, diameter: 60, pitch: 5.5 },\r\n    { id: 39, diameter: 64, pitch: 6 },\r\n    { id: 40, diameter: 68, pitch: 6 },\r\n];\r\n\r\nexport default tapDiameters;","import { useState } from \"react\";\r\nimport Buttons from \"../Buttons\";\r\nimport tapDiameters from \"./tapDiameters\";\r\nimport \"../style.css\";\r\n\r\nconst Form4 = ({ legend }) => {\r\n    const [rotationSpeed, setRotationSpeed] = useState(\"\");\r\n    const [pitch, setPitch] = useState(\"\");\r\n    const [feedValue, setFeedValue] = useState(\"\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        setFeedValue((rotationSpeed * pitch).toFixed());\r\n    };\r\n\r\n    const onFormReset = () => {\r\n        setRotationSpeed(\"\");\r\n        setPitch(\"\");\r\n        setFeedValue(\"\");\r\n    };\r\n\r\n    const onOptionChange = ({ target }) => {\r\n        setPitch(\r\n            tapDiameters[\r\n                tapDiameters.findIndex(({ diameter }) => diameter.toString() === target.value)\r\n            ].pitch\r\n        );\r\n    };\r\n\r\n    const createTapDiameterList = (\r\n        <div className=\"form__label\">\r\n            <label htmlFor=\"diameterSelector\">D [mm]:</label>\r\n            <select\r\n                className=\"form__input form__input--select\"\r\n                id=\"diameterSelector\"\r\n                onChange={onOptionChange}\r\n            >\r\n                {\r\n                    tapDiameters.map(tapDiameter => (\r\n                        <option\r\n                            key={tapDiameter.id}\r\n                            value={tapDiameter.diameter}\r\n                        >\r\n                            {tapDiameter.diameter}\r\n                        </option>\r\n                    ))\r\n                }\r\n            </select>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit} onReset={onFormReset} >\r\n            <fieldset className=\"form__fieldset\">\r\n                <legend className=\"form__legend\">{legend}</legend>\r\n                <div className=\"form__fieldsContainer\">\r\n                    <label className=\"form__label\">\r\n                        <span className=\".form__innerText\">\r\n                            <label>n [obr/min]:</label>\r\n                        </span>\r\n                        <input\r\n                            value={rotationSpeed}\r\n                            className=\"form__input\"\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            step=\"1\"\r\n                            placeholder=\" obroty wrzeciona \"\r\n                            required\r\n                            onChange={({ target }) => setRotationSpeed(target.value)}\r\n                        />\r\n                    </label>\r\n\r\n                    {createTapDiameterList}\r\n\r\n                    <label className=\"form__label\">\r\n                        <span className=\".form__innerText\">\r\n                            <label>P [mm]:</label>\r\n                        </span>\r\n                        <input\r\n                            value={pitch}\r\n                            className=\"form__input\"\r\n                            placeholder=\" Skok gwintu \"\r\n                            readOnly\r\n                        />\r\n                    </label>\r\n                    <label className=\"form__label\">\r\n                        <span className=\".form__innerText\">\r\n                            <label>f [mm/min]:</label>\r\n                        </span>\r\n                        <input\r\n                            value={feedValue}\r\n                            readOnly\r\n                            placeholder=\" wynik \"\r\n                            className=\"form__input\"\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <Buttons />\r\n            </fieldset>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default Form4;","const Container = ({ children }) => (\r\n    <main>\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import \"./style.css\";\r\n\r\nconst Section = ({ title, body }) => (\r\n    <section>\r\n        <h2 className=\"section__header\">{title}</h2>\r\n        {body}\r\n    </section>\r\n);\r\n\r\nexport default Section;","import Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Form1 from \"./Forms/Form1\";\r\nimport Form2 from \"./Forms/Form2\";\r\nimport Form3 from \"./Forms/Form3\";\r\nimport Form4 from \"./Forms/Form4\";\r\nimport Container from \"./Container\";\r\nimport Section from \"./Section\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div>\r\n      <Header title=\"Kalkulator obróbki skrawaniem\" />\r\n\r\n      <Container>\r\n        <Section\r\n          title=\"Frezowanie/wiercenie\"\r\n          body={\r\n            <>\r\n              <Form1\r\n                legend=\"Liniowa prędkość skrawania\"\r\n              />\r\n\r\n              <Form2\r\n                legend=\"Prędkość obrotowa narzędzia\"\r\n              />\r\n\r\n              <Form3\r\n                legend=\"Wielkość posuwu liniowego\"\r\n              />\r\n            </>\r\n          }\r\n        />\r\n\r\n        <Section\r\n          title=\"Gwintowanie\"\r\n          body={\r\n            <>\r\n              <Form4\r\n                legend=\"Wielkość posuwu przy gwintowaniu\"\r\n              />\r\n            </>\r\n          }\r\n        />\r\n\r\n      </Container>\r\n\r\n      <Footer\r\n        content=\"&copy; 2021 by Michał Cesarczyk\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}