{"version":3,"sources":["App/Header/styled.js","App/Header/index.js","App/Footer/styled.js","App/Footer/index.js","App/Switcher/index.js","App/languages.js","App/Forms/Buttons/styled.js","App/Forms/Buttons/index.js","App/Forms/styled.js","App/Forms/Form1/index.js","App/Forms/Form2/index.js","App/Forms/Form3/index.js","App/Forms/Form4/tapDiameters.js","App/Forms/Form4/index.js","App/Container/index.js","App/Section/index.js","App/App.js","App/useLanguage.js","reportWebVitals.js","GlobalStyle.js","index.js","theme.js"],"names":["Headline","styled","h1","Header","title","id","FooterStyled","footer","FooterContent","p","Footer","content","Switcher","languages","changeLanguage","map","language","onClick","key","mainTitle","section1Title","section2Title","form1Legend","form2Legend","form3Legend","form4Legend","diameter","name","unit","placeholder","rotSpeed","sub","cutSpeed","feedrate","feedPerRev","feedPerTooth","teethNumber","pitch","ButtonsContainer","div","Button","button","theme","color","primary","type","css","Buttons","Form","form","Fieldset","fieldset","Legend","legend","FieldsContainer","FormLabel","label","FormInnerText","span","FormTextSub","FormInput","input","RadioButtonContainer","Select","select","Form1","langId","useState","setDiameter","rotationSpeed","setRotationSpeed","cuttingSpeed","setCuttingSpeed","inputRef","useRef","onSubmit","event","preventDefault","Math","PI","toFixed","current","focus","onReset","ref","value","min","step","required","autoFocus","onChange","target","readOnly","Form3","feedFactor1","setFeedFactor1","feedFactor2","setFeedFactor2","feedType","setFeedType","feedValue","setFeedValue","feedOptions","disabled","onOptionChange","createFeedOptionList","feedOption","checked","htmlFor","tapDiameters","Form4","setPitch","createTapDiameterList","findIndex","toString","tapDiameter","Container","children","Section","body","className","App","localStorage","getItem","setLangId","useEffect","setItem","useLanguage","Form2","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","background","breakpoint","mobileMax","document","getElementById"],"mappings":"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","file":"static/js/main.48a35746.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Headline = styled.h1`\r\n    color: #fff;\r\n    background-color: #1e3246;\r\n    border-radius: 25px;\r\n    padding: 5px 25px;\r\n    font-weight: 300;\r\n    font-family: 'Ubuntu', sans-serif;\r\n    text-align: center;\r\n    margin: 0 auto 10px auto;\r\n\r\n    @media (max-width: 375px) {\r\n        font-size: 28px;\r\n    }\r\n`;","import { Headline } from \"./styled\";\r\n\r\nconst Header = ({ title }) => (\r\n    <header id=\"start\">\r\n        <Headline>\r\n            {title}\r\n        </Headline>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const FooterStyled = styled.footer`\r\n  margin: 30px 0px;\r\n`;\r\n\r\nexport const FooterContent = styled.p`\r\n  color: #000;\r\n  padding: 0 25px;\r\n  font-size: 14px;\r\n`;","import { FooterStyled, FooterContent } from \"./styled\";\r\n\r\nconst Footer = ({ content }) => (\r\n  <FooterStyled>\r\n    <FooterContent>\r\n      {content}\r\n    </FooterContent>\r\n  </FooterStyled>\r\n);\r\n\r\nexport default Footer;","  \r\nconst Switcher = ({ languages, changeLanguage }) => (\r\n    <div>\r\n        {languages.map(language => (\r\n            <button\r\n                key={language.key}\r\n                onClick={() => changeLanguage(language.key)}\r\n            >\r\n                {language.key}\r\n            </button>\r\n        ))}\r\n    </div>\r\n);\r\n\r\nexport default Switcher;","const languages = [\r\n  {\r\n    key: \"EN\",\r\n    mainTitle: \"Cutting parameters calculator\",\r\n    section1Title: \"Milling/drilling\",\r\n    section2Title: \"Threading/tapping\",\r\n    form1Legend: \"Surface cutting speed\",\r\n    form2Legend: \"Tool rotational speed\",\r\n    form3Legend: \"Feedrate value\",\r\n    form4Legend: \"Tapping feedrate\",\r\n    diameter: {\r\n      name: \"D\",\r\n      unit: \" [mm]:\",\r\n      placeholder: \"tool diameter\"\r\n    },\r\n    rotSpeed: {\r\n      name: \"n\",\r\n      sub: \"rev\",\r\n      unit: \" [rev/min]:\",\r\n      placeholder: \"tool rotations\"\r\n    },\r\n    cutSpeed: {\r\n      name: \"V\",\r\n      sub: \"c\",\r\n      unit: \" [m/min]:\",\r\n      placeholder: \"cutting speed\"\r\n    },\r\n    feedrate: {\r\n      name: \"f\",\r\n      unit: \" [mm/min]:\",\r\n      placeholder: \"feedrate\"\r\n    },\r\n    feedPerRev: {\r\n      name: \"f\",\r\n      sub: \"r\",\r\n      unit: \" [mm/rev]:\",\r\n      placeholder: \"feed per rev.\"\r\n    },\r\n    feedPerTooth: {\r\n      name: \"f\",\r\n      sub: \"t\",\r\n      unit: \" [mm]:\",\r\n      placeholder: \"feed per tooth\"\r\n    },\r\n    teethNumber: {\r\n      name: \"t:\",\r\n      placeholder: \"numer of teeth\"\r\n    },\r\n    pitch: {\r\n      name: \"P\",\r\n      unit: \" [mm]\",\r\n      placeholder: \"thread pitch\"\r\n    }\r\n  },\r\n  {\r\n    key: \"PL\",\r\n    mainTitle: \"Kalkulator obróbki skrawaniem\",\r\n    section1Title: \"Frezowanie/wiercenie\",\r\n    section2Title: \"Gwintowanie\",\r\n    form1Legend: \"Liniowa prędkość skrawania\",\r\n    form2Legend: \"Prędkość obrotowa narzędzia\",\r\n    form3Legend: \"Wielkość posuwu liniowego\",\r\n    form4Legend: \"Wielkość posuwu przy gwintowaniu\",\r\n    diameter: {\r\n      name: \"D\",\r\n      unit: \" [mm]:\",\r\n      placeholder: \"średnica narzędzia\"\r\n    },\r\n    rotSpeed: {\r\n      name: \"n\",\r\n      sub: \"obr\",\r\n      unit: \" [obr/min]:\",\r\n      placeholder: \"obroty wrzeciona\"\r\n    },\r\n    cutSpeed: {\r\n      name: \"V\",\r\n      sub: \"c\",\r\n      unit: \" [m/min]:\",\r\n      placeholder: \"prędkość skrawania\"\r\n    },\r\n    feedrate: {\r\n      name: \"f\",\r\n      unit: \" [mm/min]:\",\r\n      placeholder: \"posuw liniowy\"\r\n    },\r\n    feedPerRev: {\r\n      name: \"f\",\r\n      sub: \"o\",\r\n      unit: \" [mm/obr]:\",\r\n      placeholder: \"posuw na obrót\"\r\n    },\r\n    feedPerTooth: {\r\n      name: \"f\",\r\n      sub: \"z\",\r\n      unit: \" [mm]:\",\r\n      placeholder: \"posuw na ząb\"\r\n    },\r\n    teethNumber: {\r\n      name: \"z:\",\r\n      placeholder: \"liczba zębów\"\r\n    },\r\n    pitch: {\r\n      name: \"P\",\r\n      unit: \" [mm]\",\r\n      placeholder: \"skok gwintu\"\r\n    }\r\n  },\r\n];\r\n\r\nexport default languages;","import styled, { css } from \"styled-components\";\r\n\r\nexport const ButtonsContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 10px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    display: flex;\r\n    flex-basis: 200px;\r\n    justify-content: center;\r\n    color: #fff;\r\n    background-color: ${({ theme }) => theme.color.primary};\r\n    border: solid ${({ theme }) => theme.color.primary};\r\n    padding: 5px;\r\n    border-radius: 20px;\r\n\r\n    &:hover {\r\n        background-color: #4b5a69;\r\n    }\r\n\r\n    &:active {\r\n        background-color: #788291;\r\n        border-color: currentColor;\r\n    }\r\n\r\n    ${({ type }) => type === \"submit\" && css`\r\n        color: #19aa6e;\r\n    `}\r\n    \r\n    ${({ type }) => type === \"reset\" && css`\r\n        color: #dc3223;\r\n    `}\r\n`;","import { ButtonsContainer, Button } from \"./styled\";\r\n\r\nconst Buttons = () => (\r\n    <ButtonsContainer>\r\n        <Button type=\"submit\">\r\n            Oblicz\r\n        </Button>\r\n        <Button type=\"reset\">\r\n            Wyczyść\r\n        </Button>\r\n    </ButtonsContainer>\r\n);\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const Form = styled.form`\r\n    color: ${({ theme }) => theme.color.primary};\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nexport const Fieldset = styled.fieldset`\r\n    border-radius: 20px;\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n    text-align: center;\r\n`;\r\n\r\nexport const FieldsContainer = styled.div`\r\n    display: grid;\r\n    justify-content: center;\r\n    gap: 10px;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n    display: flex;\r\n    gap: 5px;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    @media (max-width: 480px) {\r\n        flex-direction: column;\r\n        justify-content: center;\r\n    }\r\n`;\r\n\r\nexport const FormInnerText = styled.span`\r\n    text-align: right;\r\n\r\n    @media (max-width: 480px) {\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nexport const FormTextSub = styled.span`\r\n    vertical-align: sub;\r\n    font-size: 0.7em;\r\n    margin-right: 0.15em;\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n    min-width: 200px;\r\n    border: solid 1px ${({ theme }) => theme.color.primary};\r\n    border-radius: 5px;\r\n    padding: 5px;\r\n\r\n    @media (max-width: 480px) {\r\n        width: 100%;\r\n    }\r\n\r\n    &:invalid {\r\n    background-color: beige;\r\n    }\r\n\r\n    &:disabled {\r\n        background-color: #ddd;\r\n    }\r\n`;\r\n\r\nexport const RadioButtonContainer = styled.div`\r\n    display: flex;\r\n    gap: 10px;\r\n`;\r\n\r\nexport const Select = styled.select`\r\n    min-width: 222px;\r\n    border: solid 1px ${({ theme }) => theme.color.primary};\r\n    border-radius: 5px;\r\n    padding: 5px;\r\n`;","import { useRef, useState } from \"react\";\r\nimport languages from \"../../languages\";\r\nimport Buttons from \"../Buttons\";\r\nimport { Form, Fieldset, Legend, FieldsContainer, FormLabel, FormInnerText, FormTextSub, FormInput } from \"../styled.js\";\r\n\r\nconst Form1 = ({ legend, langId }) => {\r\n  const [diameter, setDiameter] = useState(\"\");\r\n  const [rotationSpeed, setRotationSpeed] = useState(\"\");\r\n  const [cuttingSpeed, setCuttingSpeed] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    setCuttingSpeed((Math.PI * diameter * rotationSpeed / 1000).toFixed(2));\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const onFormReset = (event) => {\r\n    event.preventDefault();\r\n    setDiameter(\"\");\r\n    setRotationSpeed(\"\");\r\n    setCuttingSpeed(\"\");\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={onFormSubmit} onReset={onFormReset} >\r\n      <Fieldset>\r\n        <Legend>{legend}</Legend>\r\n        <FieldsContainer>\r\n          <FormLabel>\r\n            <FormInnerText>\r\n              <label>\r\n                {languages[langId].diameter.name}\r\n                {languages[langId].diameter.unit}\r\n              </label>\r\n            </FormInnerText>\r\n            <FormInput\r\n              ref={inputRef}\r\n              value={diameter}\r\n              type=\"number\"\r\n              min=\"0.0001\"\r\n              step=\"0.0001\"\r\n              placeholder={languages[langId].diameter.placeholder}\r\n              required\r\n              autoFocus\r\n              onChange={({ target }) => setDiameter(target.value - 0)}\r\n            />\r\n          </FormLabel>\r\n          <FormLabel>\r\n            <FormInnerText>\r\n              <label>\r\n                {languages[langId].rotSpeed.name}\r\n                <FormTextSub>\r\n                  {languages[langId].rotSpeed.sub}\r\n                </FormTextSub>\r\n                {languages[langId].rotSpeed.unit}\r\n              </label>\r\n            </FormInnerText>\r\n            <FormInput\r\n              value={rotationSpeed}\r\n              type=\"number\"\r\n              min=\"1\"\r\n              step=\"1\"\r\n              placeholder={languages[langId].rotSpeed.placeholder}\r\n              required\r\n              onChange={({ target }) => setRotationSpeed(target.value)}\r\n            />\r\n          </FormLabel>\r\n          <FormLabel>\r\n            <FormInnerText>\r\n              {languages[langId].cutSpeed.name}\r\n              <FormTextSub>\r\n                {languages[langId].cutSpeed.sub}\r\n              </FormTextSub>\r\n              {languages[langId].cutSpeed.unit}\r\n            </FormInnerText>\r\n            <FormInput\r\n              value={cuttingSpeed}\r\n              readOnly\r\n              placeholder={languages[langId].cutSpeed.placeholder}\r\n            />\r\n          </FormLabel>\r\n        </FieldsContainer>\r\n        <Buttons />\r\n      </Fieldset>\r\n    </Form>\r\n  )\r\n};\r\n\r\nexport default Form1;","import { useRef, useState } from \"react\";\r\nimport languages from \"../../languages\";\r\nimport Buttons from \"../Buttons\";\r\nimport { Form, Fieldset, Legend, FieldsContainer, FormLabel, FormInnerText, FormTextSub, FormInput } from \"../styled.js\";\r\n\r\n\r\nconst Form1 = ({ legend, langId }) => {\r\n    const [diameter, setDiameter] = useState(\"\");\r\n    const [cuttingSpeed, setCuttingSpeed] = useState(\"\");\r\n    const [rotationSpeed, setRotationSpeed] = useState(\"\");\r\n    const inputRef = useRef(null);\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        setRotationSpeed((cuttingSpeed * 1000 / Math.PI / diameter).toFixed(2));\r\n        inputRef.current.focus();\r\n    };\r\n\r\n    const onFormReset = (event) => {\r\n        event.preventDefault();\r\n        setDiameter(\"\");\r\n        setCuttingSpeed(\"\");\r\n        setRotationSpeed(\"\");\r\n        inputRef.current.focus();\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={onFormSubmit} onReset={onFormReset} >\r\n            <Fieldset>\r\n                <Legend>{legend}</Legend>\r\n                <FieldsContainer>\r\n                    <FormLabel>\r\n                        <FormInnerText>\r\n                            <label>\r\n                                {languages[langId].diameter.name}\r\n                                {languages[langId].diameter.unit}\r\n                            </label>\r\n                        </FormInnerText>\r\n                        <FormInput\r\n                            ref={inputRef}\r\n                            value={diameter}\r\n                            type=\"number\"\r\n                            min=\"0.0001\"\r\n                            step=\"0.0001\"\r\n                            placeholder={languages[langId].diameter.placeholder}\r\n                            required\r\n                            onChange={({ target }) => setDiameter(target.value)}\r\n                        />\r\n                    </FormLabel>\r\n                    <FormLabel>\r\n                        <FormInnerText>\r\n                            <label>\r\n                                {languages[langId].cutSpeed.name}\r\n                                <FormTextSub>\r\n                                    {languages[langId].cutSpeed.sub}\r\n                                </FormTextSub>\r\n                                {languages[langId].cutSpeed.unit}\r\n                            </label>\r\n                        </FormInnerText>\r\n                        <FormInput\r\n                            value={cuttingSpeed}\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            step=\"1\"\r\n                            placeholder={languages[langId].cutSpeed.placeholder}\r\n                            required\r\n                            onChange={({ target }) => setCuttingSpeed(target.value)}\r\n                        />\r\n                    </FormLabel>\r\n                    <FormLabel>\r\n                        <FormInnerText>\r\n                            <label>\r\n                                {languages[langId].rotSpeed.name}\r\n                                <FormTextSub>\r\n                                    {languages[langId].rotSpeed.sub}\r\n                                </FormTextSub>\r\n                                {languages[langId].rotSpeed.unit}\r\n                            </label>\r\n                        </FormInnerText>\r\n                        <FormInput\r\n                            value={rotationSpeed}\r\n                            readOnly\r\n                            placeholder={languages[langId].rotSpeed.placeholder}\r\n                        />\r\n                    </FormLabel>\r\n                </FieldsContainer>\r\n                <Buttons />\r\n            </Fieldset>\r\n        </Form>\r\n    )\r\n};\r\n\r\nexport default Form1;","import { useRef, useState } from \"react\";\r\nimport languages from \"../../languages\";\r\nimport Buttons from \"../Buttons\";\r\nimport { Form, Fieldset, Legend, FieldsContainer, FormLabel, FormInnerText, FormTextSub, FormInput, RadioButtonContainer } from \"../styled.js\";\r\n\r\nconst Form3 = ({ legend, langId }) => {\r\n    const [rotationSpeed, setRotationSpeed] = useState(\"\");\r\n    const [feedFactor1, setFeedFactor1] = useState(\"\");\r\n    const [feedFactor2, setFeedFactor2] = useState(\"\");\r\n    const [feedType, setFeedType] = useState(\"FPR\");\r\n    const [feedValue, setFeedValue] = useState(\"\");\r\n    const inputRef = useRef(null);\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (feedType === \"FPR\") {\r\n            setFeedValue((rotationSpeed * feedFactor1).toFixed());\r\n        } else {\r\n            setFeedValue((rotationSpeed * feedFactor1 * feedFactor2).toFixed());\r\n        }\r\n        inputRef.current.focus();\r\n    };\r\n\r\n    const onFormReset = (event) => {\r\n        event.preventDefault();\r\n        setRotationSpeed(\"\");\r\n        setFeedType(\"FPR\");\r\n        setFeedFactor1(\"\");\r\n        setFeedFactor2(\"\");\r\n        setFeedValue(\"\");\r\n        inputRef.current.focus();\r\n    };\r\n\r\n    const feedOptions = [\r\n        {\r\n            id: \"FPR\",\r\n            name: `${languages[langId].feedPerRev.name}`,\r\n            sub: `${languages[langId].feedPerRev.sub}`,\r\n            unit: `${languages[langId].feedPerRev.unit}`,\r\n            placeholder: `${languages[langId].feedPerRev.placeholder}`,\r\n            disabled: false\r\n        },\r\n        {\r\n            id: \"FPT\",\r\n            name: `${languages[langId].feedPerTooth.name}`,\r\n            sub: `${languages[langId].feedPerTooth.sub}`,\r\n            unit: `${languages[langId].feedPerTooth.unit}`,\r\n            placeholder: `${languages[langId].feedPerTooth.placeholder}`,\r\n            disabled: true\r\n        }\r\n    ];\r\n\r\n    const onOptionChange = ({ target }) => {\r\n        setFeedType(target.value);\r\n        setFeedFactor1(\"\");\r\n        setFeedFactor2(\"\");\r\n    };\r\n\r\n    const createFeedOptionList = (\r\n        <>\r\n            {\r\n                feedOptions.map(feedOption => (\r\n                    <FormLabel key={feedOption.id}>\r\n                        <RadioButtonContainer>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"feedType\"\r\n                                id={feedOption.id}\r\n                                value={feedOption.id}\r\n                                checked={feedType === feedOption.id}\r\n                                onChange={onOptionChange}\r\n                            />\r\n                            <label htmlFor={feedOption.id}>\r\n                                {feedOption.name}\r\n                                <FormTextSub>\r\n                                    {feedOption.sub}\r\n                                </FormTextSub>\r\n                                {feedOption.unit}\r\n                            </label>\r\n                        </RadioButtonContainer>\r\n                        <FormInput\r\n                            value={(feedOption.id === feedType) ? feedFactor1 : \"\"}\r\n                            type=\"number\"\r\n                            min=\"0.01\"\r\n                            step=\"0.01\"\r\n                            required\r\n                            disabled={feedOption.id !== feedType}\r\n                            placeholder={feedOption.placeholder}\r\n                            onChange={({ target }) => setFeedFactor1(target.value)}\r\n                        />\r\n                    </FormLabel>\r\n                ))\r\n            }\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <Form onSubmit={onFormSubmit} onReset={onFormReset} >\r\n            <Fieldset>\r\n                <Legend>{legend}</Legend>\r\n                <FieldsContainer>\r\n                    <FormLabel>\r\n                        <FormInnerText>\r\n                            <label>\r\n                                {languages[langId].rotSpeed.name}\r\n                                <FormTextSub>\r\n                                    {languages[langId].rotSpeed.sub}\r\n                                </FormTextSub>\r\n                                {languages[langId].rotSpeed.unit}\r\n                            </label>\r\n                        </FormInnerText>\r\n                        <FormInput\r\n                            ref={inputRef}\r\n                            value={rotationSpeed}\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            step=\"1\"\r\n                            placeholder={languages[langId].rotSpeed.placeholder}\r\n                            required\r\n                            onChange={({ target }) => setRotationSpeed(target.value)}\r\n                        />\r\n                    </FormLabel>\r\n\r\n                    {createFeedOptionList}\r\n\r\n                    <FormLabel>\r\n                        <FormInnerText>\r\n                            <label>\r\n                                {languages[langId].teethNumber.name}\r\n                            </label>\r\n                        </FormInnerText>\r\n                        <FormInput\r\n                            value={(feedType === \"FPT\") ? feedFactor2 : \"\"}\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            step=\"1\"\r\n                            placeholder={languages[langId].teethNumber.placeholder}\r\n                            required\r\n                            disabled={feedType === \"FPR\"}\r\n                            onChange={({ target }) => setFeedFactor2(target.value)}\r\n                        />\r\n                    </FormLabel>\r\n                    <FormLabel>\r\n                        <FormInnerText>\r\n                            <label>\r\n                                {languages[langId].feedrate.name}\r\n                                {languages[langId].feedrate.unit}\r\n                            </label>\r\n                        </FormInnerText>\r\n                        <FormInput\r\n                            value={feedValue}\r\n                            readOnly\r\n                            placeholder={languages[langId].feedrate.placeholder}\r\n                        />\r\n                    </FormLabel>\r\n                </FieldsContainer>\r\n                <Buttons />\r\n            </Fieldset>\r\n        </Form>\r\n    )\r\n};\r\n\r\nexport default Form3;","const tapDiameters = [\r\n    { id: 0, diameter: \"\", pitch: \"\" },\r\n    { id: 1, diameter: 1, pitch: 0.25 },\r\n    { id: 2, diameter: 1.1, pitch: 0.25 },\r\n    { id: 3, diameter: 1.2, pitch: 0.25 },\r\n    { id: 4, diameter: 1.4, pitch: 0.3 },\r\n    { id: 5, diameter: 1.6, pitch: 0.35 },\r\n    { id: 6, diameter: 1.8, pitch: 0.35 },\r\n    { id: 7, diameter: 2, pitch: 0.4 },\r\n    { id: 8, diameter: 2.2, pitch: 0.45 },\r\n    { id: 9, diameter: 2.5, pitch: 0.45 },\r\n    { id: 10, diameter: 3, pitch: 0.5 },\r\n    { id: 11, diameter: 3.5, pitch: 0.6 },\r\n    { id: 12, diameter: 4, pitch: 0.7 },\r\n    { id: 13, diameter: 4.5, pitch: 0.75 },\r\n    { id: 14, diameter: 5, pitch: 0.8 },\r\n    { id: 15, diameter: 6, pitch: 1 },\r\n    { id: 16, diameter: 7, pitch: 1 },\r\n    { id: 17, diameter: 8, pitch: 1.25 },\r\n    { id: 18, diameter: 9, pitch: 1.25 },\r\n    { id: 19, diameter: 10, pitch: 1.5 },\r\n    { id: 20, diameter: 11, pitch: 1.5 },\r\n    { id: 21, diameter: 12, pitch: 1.75 },\r\n    { id: 22, diameter: 14, pitch: 2 },\r\n    { id: 23, diameter: 16, pitch: 2 },\r\n    { id: 24, diameter: 18, pitch: 2.5 },\r\n    { id: 25, diameter: 20, pitch: 2.5 },\r\n    { id: 26, diameter: 22, pitch: 2.5 },\r\n    { id: 27, diameter: 24, pitch: 3 },\r\n    { id: 28, diameter: 27, pitch: 3 },\r\n    { id: 29, diameter: 30, pitch: 3.5 },\r\n    { id: 30, diameter: 33, pitch: 3.5 },\r\n    { id: 31, diameter: 36, pitch: 4 },\r\n    { id: 32, diameter: 39, pitch: 4 },\r\n    { id: 33, diameter: 42, pitch: 4.5 },\r\n    { id: 34, diameter: 45, pitch: 4.5 },\r\n    { id: 35, diameter: 48, pitch: 5 },\r\n    { id: 36, diameter: 52, pitch: 5 },\r\n    { id: 37, diameter: 56, pitch: 5.5 },\r\n    { id: 38, diameter: 60, pitch: 5.5 },\r\n    { id: 39, diameter: 64, pitch: 6 },\r\n    { id: 40, diameter: 68, pitch: 6 },\r\n];\r\n\r\nexport default tapDiameters;","import { useRef, useState } from \"react\";\r\nimport Buttons from \"../Buttons\";\r\nimport languages from \"../../languages\";\r\nimport tapDiameters from \"./tapDiameters\";\r\nimport { FormLabel, Select, Form, Fieldset, Legend, FieldsContainer, FormInnerText, FormTextSub, FormInput } from \"../styled\";\r\n\r\nconst Form4 = ({ legend, langId }) => {\r\n    const [rotationSpeed, setRotationSpeed] = useState(\"\");\r\n    const [diameter, setDiameter] = useState(\"\");\r\n    const [pitch, setPitch] = useState(\"\");\r\n    const [feedValue, setFeedValue] = useState(\"\");\r\n    const inputRef = useRef(null);\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        setFeedValue((rotationSpeed * pitch).toFixed());\r\n        inputRef.current.focus();\r\n    };\r\n\r\n    const onFormReset = (event) => {\r\n        event.preventDefault();\r\n        setRotationSpeed(\"\");\r\n        setDiameter(\"\");\r\n        setPitch(\"\");\r\n        setFeedValue(\"\");\r\n        inputRef.current.focus();\r\n    };\r\n\r\n    const onOptionChange = ({ target }) => {\r\n        setDiameter(target.value);\r\n        setPitch(\r\n            tapDiameters[\r\n                tapDiameters.findIndex(({ diameter }) => diameter.toString() === target.value)\r\n            ].pitch\r\n        );\r\n    };\r\n\r\n    const createTapDiameterList = (\r\n        <FormLabel>\r\n            <label htmlFor=\"diameterSelector\">\r\n                {languages[langId].diameter.name}\r\n                {languages[langId].diameter.unit}\r\n            </label>\r\n            <Select\r\n                id=\"diameterSelector\"\r\n                onChange={onOptionChange}\r\n                value={diameter}\r\n            >\r\n                {\r\n                    tapDiameters.map(tapDiameter => (\r\n                        <option\r\n                            key={tapDiameter.id}\r\n                        >\r\n                            {tapDiameter.diameter}\r\n                        </option>\r\n                    ))\r\n                }\r\n            </Select>\r\n        </FormLabel>\r\n    );\r\n\r\n    return (\r\n        <Form onSubmit={onFormSubmit} onReset={onFormReset} >\r\n            <Fieldset>\r\n                <Legend>{legend}</Legend>\r\n                <FieldsContainer>\r\n                    <FormLabel>\r\n                        <FormInnerText>\r\n                            <label>\r\n                                {languages[langId].rotSpeed.name}\r\n                                <FormTextSub>\r\n                                    {languages[langId].rotSpeed.sub}\r\n                                </FormTextSub>\r\n                                {languages[langId].rotSpeed.unit}\r\n                            </label>\r\n                        </FormInnerText>\r\n                        <FormInput\r\n                            ref={inputRef}\r\n                            value={rotationSpeed}\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            step=\"1\"\r\n                            placeholder={languages[langId].rotSpeed.placeholder}\r\n                            required\r\n                            onChange={({ target }) => setRotationSpeed(target.value)}\r\n                        />\r\n                    </FormLabel>\r\n\r\n                    {createTapDiameterList}\r\n\r\n                    <FormLabel>\r\n                        <FormInnerText>\r\n                            <label>\r\n                                {languages[langId].pitch.name}\r\n                                {languages[langId].pitch.unit}\r\n                            </label>\r\n                        </FormInnerText>\r\n                        <FormInput\r\n                            value={pitch}\r\n                            placeholder={languages[langId].pitch.placeholder}\r\n                            readOnly\r\n                        />\r\n                    </FormLabel>\r\n                    <FormLabel>\r\n                        <FormInnerText>\r\n                            <label>\r\n                                {languages[langId].feedrate.name}\r\n                                {languages[langId].feedrate.unit}\r\n                            </label>\r\n                        </FormInnerText>\r\n                        <FormInput\r\n                            value={feedValue}\r\n                            readOnly\r\n                            placeholder={languages[langId].feedrate.placeholder}\r\n                        />\r\n                    </FormLabel>\r\n                </FieldsContainer>\r\n                <Buttons />\r\n            </Fieldset>\r\n        </Form>\r\n    )\r\n};\r\n\r\nexport default Form4;","const Container = ({ children }) => (\r\n    <main>\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import \"./style.css\";\r\n\r\nconst Section = ({ title, body }) => (\r\n    <section>\r\n        <h2 className=\"section__header\">{title}</h2>\r\n        {body}\r\n    </section>\r\n);\r\n\r\nexport default Section;","import Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport { useLanguage } from './useLanguage';\r\nimport Switcher from \"./Switcher\";\r\nimport Form1 from \"./Forms/Form1\";\r\nimport Form2 from \"./Forms/Form2\";\r\nimport Form3 from \"./Forms/Form3\";\r\nimport Form4 from \"./Forms/Form4\";\r\nimport Container from \"./Container\";\r\nimport Section from \"./Section\";\r\nimport languages from \"./languages\";\r\n\r\nfunction App() {\r\n\r\n  const { langId, setLangId } = useLanguage();\r\n\r\n  const changeLanguage = (key) => {\r\n    setLangId(languages.findIndex(language => language.key === key));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header title={languages[langId].mainTitle} />\r\n      <Switcher\r\n        languages={languages}\r\n        changeLanguage={changeLanguage}\r\n      />\r\n\r\n      <Container>\r\n        <Section\r\n          title={languages[langId].section1Title}\r\n          body={\r\n            <>\r\n              <Form1\r\n                legend={languages[langId].form1Legend}\r\n                langId={langId}\r\n              />\r\n\r\n              <Form2\r\n                legend={languages[langId].form2Legend}\r\n                langId={langId}\r\n              />\r\n\r\n              <Form3\r\n                legend={languages[langId].form3Legend}\r\n                langId={langId}\r\n              />\r\n            </>\r\n          }\r\n        />\r\n\r\n        <Section\r\n          title={languages[langId].section2Title}\r\n          body={\r\n            <>\r\n              <Form4\r\n                legend={languages[langId].form4Legend}\r\n                langId={langId}\r\n              />\r\n            </>\r\n          }\r\n        />\r\n\r\n      </Container>\r\n\r\n      <Footer\r\n        content=\"&copy; 2021 by Michał Cesarczyk\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\nexport default App;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useLanguage = () => {\r\n\r\n    const [langId, setLangId] = useState(localStorage.getItem(\"langId\") || 0);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"langId\", langId);\r\n    }, [langId]);\r\n\r\n    return { langId, setLangId };\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*, ::after, ::before {\r\n  box-sizing: inherit;\r\n}\r\n\r\nbody {\r\n  color: #1E3246;\r\n  background-color: #fff;\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n  line-height: 1.15;\r\n  font-family: 'Ubuntu', sans-serif;\r\n  min-width: 248px;\r\n}\r\n\r\nbutton {\r\n    cursor: pointer;\r\n}\r\n`;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { GlobalStyle } from \"./GlobalStyle\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./theme\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme} >\r\n      <GlobalStyle />\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const theme = {\r\n    color: {\r\n        primary: \"#1e3246\",\r\n        background: \"#133246\",\r\n    },\r\n    breakpoint: {\r\n        mobileMax: \"480px\",\r\n    },\r\n}"],"sourceRoot":""}